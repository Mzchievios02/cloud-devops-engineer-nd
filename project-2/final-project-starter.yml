Parameters:

    EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String
    InstanceType:
      Description: WebServer EC2 instance type
      Type: String
    VolumeSize: 
      Description: EBS Volume size
      Type: Number


Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Description: Bucket to store the apps archive
    DeletionPolicy: Retain


  MyEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0729e439b6769d6ab"
      InstanceType: !Ref InstanceType
      KeyName: "pro2"
      IamInstanceProfile: !Ref ProfileWithRolesForOurApp
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdm"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "true"
            VolumeSize: !Ref VolumeSize
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service 
          echo "Welcome to Udagram!" > /var/www/html/index.html
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
# Instance Profile
  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: ec2-instance-profile-for-app
      Roles:
        - Ref: UdacityS3ReadOnlyEC2Role
# IAM Role for Instance Profile
  UdacityS3ReadOnlyEC2Role: 
    Type: AWS::IAM::Role
    Properties:
      RoleName: Udacity-S3-Read-Only
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'    
# IAM policy for S3 read access
  UdacityInstanceS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3ReadOnlyPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !GetAtt S3Bucket.Arn
              - !Sub '${S3Bucket.Arn}/*'
          
      Roles:
        -
          !Ref UdacityS3ReadOnlyEC2Role

Outputs: 
  S3BucketARN:
    Description: Bucket ARN
    Value: !GetAtt S3Bucket.Arn
  

  # This is also optional.
  # Bonus points for useful outputs!
  # for example, if you create a Load Balancer
  # it's nice to output the URL to it here, so that we don't have to go to the console to get it.